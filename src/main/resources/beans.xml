<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="springHelloWorld"
          class="com.sinoiov.lhjh.impl.SpringHelloWorld">
    </bean>
    <bean id="strutsHelloWorld"
          class="com.sinoiov.lhjh.impl.StrutsHelloWorld">
    </bean>

    <!--
        上面声明了两个HelloWorld：
        一个是springHelloWorld，它是 com.sinoiov.lhjh.impl.SpringHelloWorld 可以创建的实例
        第二个是strutsHelloWorld，它是com.sinoiov.lhjh.impl.StrutsHelloWorld 可以创建的实例
        而SpringHelloWorld和StrutsHelloWorld这两个类都实现了HelloWorld接口
        在这个例子中，我们使用com.sinoiov.lhjh.service.HelloWorldService的实例helloWorldService来操作实现了HelloWorld接口的子类
        所以，只要是实现了HelloWorld的子类，都可以在com.sinoiov.lhjh.service.HelloWorldService中操纵
        com.sinoiov.lhjh.service.HelloWorldService这个类的属性private HelloWorld helloWorld;在这里使用property name进行映射
        Spring会根据com.sinoiov.lhjh.service.HelloWorldService类提供的对属性private HelloWorld helloWorld的set方法
        完成指定对象的值的注入。
    -->
    <bean id="helloWorldService"
          class="com.sinoiov.lhjh.service.HelloWorldService">
        <property name="helloWorld" ref="springHelloWorld"/>
    </bean>

    <!-- 下面是一个更新的注入用法 -->

    <!--
        在这里， com.sinoiov.lhjh.impl.BraveKnight和com.sinoiov.lhjh.impl.SlayDragonQuest被声明为Spring中的Bean
        对BraveKnight，在构造时，传入参数quest，quest的定义也很明确，但是它在构建时，使用了Spring表达式语言，将System.out传入
    -->
    <bean id="knight" class="com.sinoiov.lhjh.impl.BraveKnight">
        <constructor-arg ref="quest"/>
    </bean>
    <bean id="quest" class="com.sinoiov.lhjh.impl.SlayDragonQuest">
        <constructor-arg ref="#{T(System).out}"/>
    </bean>
</beans>